<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
	<property>
		<name>dfs.name.dir</name>
		<value>${hadoop.tmp.dir}/dfs/name</value>
		<description>Determines where on the local filesystem the DFS name
			node
			should store the name table(fsimage). If this is a
			comma-delimited list
			of directories then the name table is replicated
			in all of the
			directories, for redundancy.
		</description>
	</property>

	<property>
		<name>dfs.permissions</name>
		<value>false</value>
		<description>
			If "true", enable permission checking in HDFS.
			If "false",
			permission checking is turned off,
			but all other behavior is
			unchanged.
			Switching from one parameter value to the other does not
			change the mode,
			owner or group of files or directories.
		</description>
	</property>

	<property>
		<name>dfs.data.dir</name>
		<value>${hadoop.tmp.dir}/dfs/data</value>
		<description>Determines where on the local filesystem an DFS data node
			should store its blocks. If this is a comma-delimited
			list of
			directories, then data will be stored in all named
			directories,
			typically on different devices.
			Directories that do not exist are
			ignored.
		</description>
	</property>

	<property>
		<name>dfs.block.size</name>
		<value>268435456</value>
		<description>The default block size for new files.</description>
	</property>

	<property>
		<name>dfs.replication</name>
		<value>3</value>
		<description>Default block replication.
			The actual number of
			replications can be specified when the file is
			created.
			The default is
			used if replication is not specified in create time.
		</description>
	</property>

	<property>
		<name>dfs.datanode.max.xcievers</name>
		<value>4096</value>
		<description>An Hadoop HDFS datanode has an upper bound on the number
			of files
			that it will serve at any one time.The upper bound parameter
			is called
			xcievers
			(yes, this is misspelled).
		</description>
	</property>

	<property>
		<name>dfs.support.append</name>
		<value>true</value>
		<description>Does HDFS allow appends to files?</description>
	</property>

</configuration>
